// Generated by redfish-codegen. Do not modify.

{{#moduleContext}}
{{#imports}}
use {{{path}}};
{{/imports}}
{{/moduleContext}}

use axum::{
    extract::State,
    routing::{self, MethodRouter},
    Json,
};
use redfish_codegen::models::odata_v4::{Context, Service, ServiceDocument};

/// This endpoint implements the OData Service Document.
#[derive(Clone, Default)]
pub struct OData(ServiceDocument);

impl OData {
    pub fn new() -> Self {
        Self(ServiceDocument {
            odata_context: Context("{{{odataContext}}}".to_string()),
            value: vec![Service {
                name: "Service".to_string(),
                url: "/redfish/v1/".to_string(),
                ..Default::default()
            }],
        })
    }

{{#services}}
    pub fn enable_{{service}}(mut self) -> Self {
        self.0.value.push(Service {
            name: "{{{name}}}".to_string(),
            url: "{{{uri}}}".to_string(),
            ..Default::default()
        });
        self
    }

{{/services}}
}

impl From<OData> for MethodRouter {
    fn from(val: OData) -> Self {
        routing::get(|State(odata): State<OData>| async move { Json(odata.0) }).with_state(val)
    }
}
